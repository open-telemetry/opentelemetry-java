Comparing source compatibility of  against 
+++  NEW CLASS: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporter  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder builder()
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.sdk.common.CompletableResultCode export(java.util.Collection)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.sdk.common.CompletableResultCode flush()
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporter getDefault()
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.sdk.common.CompletableResultCode shutdown()
+++  NEW CLASS: PUBLIC(+) FINAL(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder addHeader(java.lang.String, java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporter build()
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder setCompression(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder setEndpoint(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder setTimeout(long, java.util.concurrent.TimeUnit)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder setTimeout(java.time.Duration)
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.exporter.otlp.http.trace.OtlpHttpJsonSpanExporterBuilder setTrustedCertificates(byte[])
