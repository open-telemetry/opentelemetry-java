Comparing source compatibility of opentelemetry-api-1.41.0-SNAPSHOT.jar against opentelemetry-api-1.40.0.jar
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) io.opentelemetry.api.common.AnyValue  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.String asString()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) io.opentelemetry.api.common.AnyValueType getType()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.Object getValue()
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.lang.String> of(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.lang.Boolean> of(boolean)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.lang.Long> of(long)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.lang.Double> of(double)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.nio.ByteBuffer> of(byte[])
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.util.List<io.opentelemetry.api.common.AnyValue<?>>> of(io.opentelemetry.api.common.AnyValue[]<?>)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.util.List<io.opentelemetry.api.common.AnyValue<?>>> of(java.util.List<io.opentelemetry.api.common.AnyValue<?>>)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.util.List<io.opentelemetry.api.common.KeyAnyValue>> of(io.opentelemetry.api.common.KeyAnyValue[])
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValue<java.util.List<io.opentelemetry.api.common.KeyAnyValue>> of(java.util.Map<java.lang.String,io.opentelemetry.api.common.AnyValue<?>>)
+++  NEW ENUM: PUBLIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType  (compatible)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	+++  NEW INTERFACE: java.lang.constant.Constable
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: java.io.Serializable
	+++  NEW SUPERCLASS: java.lang.Enum
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType BYTES
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType ARRAY
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType KEY_VALUE_LIST
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType STRING
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType DOUBLE
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType BOOLEAN
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) io.opentelemetry.api.common.AnyValueType LONG
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValueType valueOf(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.AnyValueType[] values()
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) io.opentelemetry.api.common.KeyAnyValue  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) io.opentelemetry.api.common.AnyValue<?> getAnyValue()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.String getKey()
	+++  NEW METHOD: PUBLIC(+) STATIC(+) io.opentelemetry.api.common.KeyAnyValue of(java.lang.String, io.opentelemetry.api.common.AnyValue<?>)
***  MODIFIED INTERFACE: PUBLIC ABSTRACT io.opentelemetry.api.logs.LogRecordBuilder  (not serializable)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW METHOD: PUBLIC(+) io.opentelemetry.api.logs.LogRecordBuilder setBody(io.opentelemetry.api.common.AnyValue<?>)
